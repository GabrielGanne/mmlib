.\"@mindmaze_header@
.TH MMPROFILE_RESET 3 2014 "MINDMAZE" "mmlib library manual"
.SH NAME
mmprofile_reset - Reset the statistics and change the timer
.SH SYNOPSIS
.LP
.B #include <mmprofile.h>
.sp
.BI "void mmprofile_reset(int " flags ");"
.sp
Link with
.I -lmmlib
.SH DESCRIPTION
.LP
\fBmmprofile_reset\fP() Reset the timing statistics, ie, reset the min, max,
mean values as well as the number of point used in one iteration and the
associated labels.  Additionally it provides a ways to change the type of
timer used for measure.
.LP
The \fIflags\fP arguments allows to change the behavior of the reset.  If
the PROF_RESET_CPUCLOCK flag is set, it will use a timer based on CPU's
instruction counter. This timer has a very fine granularity (of the order of
very few nanoseconds) but it does not take measure time spent on sleeping
while waiting certain event (disk io, mutex/cond, etc...). This timer
indicates the processing power spent on tasks.
.LP
Alternatively if PROF_RESET_CPUCLOCK is NOT set, it will use a timer based
on wall clock. This timer has bigger granularity (order of hundred
nanoseconds) and report time spent at sleeping. The indicates the realtime
update will performing certain task.
.LP
If the PROF_RESET_KEEPLABEL flag is set in the \fIflags\fP argument, the
labels associated with each measure point will be kept over the reset.  In
practice, this provides a way to avoid the overhead of label copy when using
\fBmmtoc_label\fP(3): an initial iteration will copy the label and the
measurements are reset after this first iteration while keeping the label.
Then the subsequent call to \fBmmtoc_label\fP(3) will not be affected by the
string copy overhead.
.LP
At startup, the function are configured to use CPU based timer.
.SH "RETURN VALUE"
.LP
None.
.SH "SEE ALSO"
.BR mmprofile_print (3),
.BR mmtic (3),
.BR mmtoc_label (3)
